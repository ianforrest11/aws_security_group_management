name: Terraform Init, Validate, & Plan Workflow

on:
  push:
    branches:
      - main  # Trigger on push to the main branch

permissions:
  id-token: write   # Required for requesting the JWT
  contents: read    # Required for actions/checkout

jobs:
  terraform-init-plan-security-group:
    name: Init and Plan Terraform security_group_management
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT: ${{ github.ref_name == 'main' && 'production'}}
      VAR_FILE: ${{ github.ref_name == 'main' && '../variables/production.tfvars'}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: ${{ secrets.RUNNER_ROLE_ARN }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: us-east-1

      - name: Sts GetCallerIdentity
        run: aws sts get-caller-identity

      - name: Init and Plan Terraform security_group_management
        run: |
          cd security_group_management/terraform
          terraform init
          terraform validate
          terraform plan -var-file=${{ env.VAR_FILE }}

  terraform-init-plan-security-group-rule:
      name: Init and Plan Terraform security_group_rule_management
      runs-on: ubuntu-latest
      needs: terraform-init-plan-security-group
      env:
        ENVIRONMENT: ${{ github.ref_name == 'main' && 'production'}}
        VAR_FILE: ${{ github.ref_name == 'main' && '../variables/production.tfvars'}}
      steps:
        - name: Checkout repository
          uses: actions/checkout@v2

        - name: Configure SSH
          env:
            SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          run: |
            mkdir -p ~/.ssh/
            echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            chmod 644 ~/.ssh/known_hosts

        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v1.7.0
          with:
            role-to-assume: ${{ secrets.RUNNER_ROLE_ARN }}
            role-session-name: GitHub_to_AWS_via_FederatedOIDC
            aws-region: us-east-1

        - name: Sts GetCallerIdentity
          run: aws sts get-caller-identity

        - name: List files in security_group_rule_management/terraform
          run: |
            ls -la security_group_rule_management/terraform

        - name: Init and Plan Terraform security_group_rule_management
          run: |
            cd security_group_rule_management/terraform
            sed -i "s/PLACEHOLDER_ENV/${{ env.ENVIRONMENT }}/g" provider.tf
            terraform init
            terraform validate
            terraform plan -var-file=${{ env.VAR_FILE }} -var-file=../variables/global.tfvars