name: Terraform Destroy Workflow

on:
  workflow_dispatch:  # Allow manual trigger

permissions:
  id-token: write   # Required for requesting the JWT
  contents: read    # Required for actions/checkout

jobs:
  terraform-destroy-security-group-rule:
    name: Destroy Terraform security_group_rule_management
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT: ${{ github.ref_name == 'main' && 'production'}}
      VAR_FILE: ${{ github.ref_name == 'main' && '../variables/production.tfvars'}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: ${{ secrets.RUNNER_ROLE_ARN }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Init and Destroy Terraform security_group_rule_management
        run: |
          cd security_group_rule_management/terraform
          sed -i "s/PLACEHOLDER_ENV/${{ env.ENVIRONMENT }}/g" provider.tf
          terraform init
          terraform destroy -auto-approve -var-file=${{ env.VAR_FILE }}

  terraform-destroy-security-group:
    name: Destroy Terraform security_group_management
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT: ${{ github.ref_name == 'main' && 'production'}}
      VAR_FILE: ${{ github.ref_name == 'main' && '../variables/production.tfvars'}}
    needs: terraform-destroy-security-group-rule
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: ${{ secrets.RUNNER_ROLE_ARN }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Init and Destroy Terraform security_group_management
        run: |
          cd security_group_management/terraform
          sed -i "s/PLACEHOLDER_ENV/${{ env.ENVIRONMENT }}/g" provider.tf
          terraform init
          terraform destroy -auto-approve -var-file=${{ env.VAR_FILE }} -var-file=../variables/global.tfvars
